(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{77:function(t,a,s){"use strict";s.r(a);var n=s(0),e=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"text-节点和-documentfragment-节点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#text-节点和-documentfragment-节点","aria-hidden":"true"}},[t._v("#")]),t._v(" Text 节点和 DocumentFragment 节点")]),s("h2",{attrs:{id:"text-节点的概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#text-节点的概念","aria-hidden":"true"}},[t._v("#")]),t._v(" Text 节点的概念")]),s("p",[t._v("文本节点（"),s("code",[t._v("Text")]),t._v("）代表元素节点（"),s("code",[t._v("Element")]),t._v("）和属性节点（"),s("code",[t._v("Attribute")]),t._v("）的文本内容。如果一个节点只包含一段文本，那么它就有一个文本子节点，代表该节点的文本内容。")]),s("p",[t._v("通常我们使用父节点的"),s("code",[t._v("firstChild")]),t._v("、"),s("code",[t._v("nextSibling")]),t._v("等属性获取文本节点，或者使用"),s("code",[t._v("Document")]),t._v("节点的"),s("code",[t._v("createTextNode")]),t._v("方法创造一个文本节点。")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token comment"}},[t._v("// 获取文本节点")]),t._v("\n"),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" textNode "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("querySelector")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v("'p'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("firstChild"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{attrs:{class:"token comment"}},[t._v("// 创造文本节点")]),t._v("\n"),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" textNode "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("createTextNode")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v("'Hi'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ndocument"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("querySelector")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v("'div'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("appendChild")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("textNode"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),s("p",[t._v("浏览器原生提供一个"),s("code",[t._v("Text")]),t._v("构造函数。它返回一个文本节点实例。它的参数就是该文本节点的文本内容。")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token comment"}},[t._v("// 空字符串")]),t._v("\n"),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" text1 "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{attrs:{class:"token class-name"}},[t._v("Text")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{attrs:{class:"token comment"}},[t._v("// 非空字符串")]),t._v("\n"),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" text2 "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{attrs:{class:"token class-name"}},[t._v("Text")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v("'This is a text node'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),s("p",[t._v("注意，由于空格也是一个字符，所以哪怕只有一个空格，也会形成文本节点。比如，"),s("code",[t._v("<p> </p>")]),t._v("包含一个空格，它的子节点就是一个文本节点。")]),s("p",[t._v("文本节点除了继承"),s("code",[t._v("Node")]),t._v("接口，还继承了"),s("code",[t._v("CharacterData")]),t._v("接口。"),s("code",[t._v("Node")]),t._v("接口的属性和方法请参考《Node 接口》一章，这里不再重复介绍了，以下的属性和方法大部分来自"),s("code",[t._v("CharacterData")]),t._v("接口。")]),s("h2",{attrs:{id:"text-节点的属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#text-节点的属性","aria-hidden":"true"}},[t._v("#")]),t._v(" Text 节点的属性")]),s("h3",{attrs:{id:"data"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#data","aria-hidden":"true"}},[t._v("#")]),t._v(" data")]),s("p",[s("code",[t._v("data")]),t._v("属性等同于"),s("code",[t._v("nodeValue")]),t._v("属性，用来设置或读取文本节点的内容。")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token comment"}},[t._v("// 读取文本内容")]),t._v("\ndocument"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("querySelector")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v("'p'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("firstChild"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data\n"),s("span",{attrs:{class:"token comment"}},[t._v("// 等同于")]),t._v("\ndocument"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("querySelector")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v("'p'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("firstChild"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("nodeValue\n\n"),s("span",{attrs:{class:"token comment"}},[t._v("// 设置文本内容")]),t._v("\ndocument"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("querySelector")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v("'p'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("firstChild"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v("'Hello World'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),s("h3",{attrs:{id:"wholetext"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#wholetext","aria-hidden":"true"}},[t._v("#")]),t._v(" wholeText")]),s("p",[s("code",[t._v("wholeText")]),t._v("属性将当前文本节点与毗邻的文本节点，作为一个整体返回。大多数情况下，"),s("code",[t._v("wholeText")]),t._v("属性的返回值，与"),s("code",[t._v("data")]),t._v("属性和"),s("code",[t._v("textContent")]),t._v("属性相同。但是，某些特殊情况会有差异。")]),s("p",[t._v("举例来说，HTML 代码如下。")]),s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("p")]),t._v(" "),s("span",{attrs:{class:"token attr-name"}},[t._v("id")]),s("span",{attrs:{class:"token attr-value"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{attrs:{class:"token punctuation"}},[t._v('"')]),t._v("para"),s("span",{attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("A "),s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("em")]),s("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("B"),s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("em")]),s("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" C"),s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("p")]),s("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),s("p",[t._v("这时，文本节点的"),s("code",[t._v("wholeText")]),t._v("属性和"),s("code",[t._v("data")]),t._v("属性，返回值相同。")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" el "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("getElementById")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v("'para'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nel"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("firstChild"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("wholeText "),s("span",{attrs:{class:"token comment"}},[t._v('// "A "')]),t._v("\nel"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("firstChild"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data "),s("span",{attrs:{class:"token comment"}},[t._v('// "A "')]),t._v("\n")])]),s("p",[t._v("但是，一旦移除"),s("code",[t._v("<em>")]),t._v("节点，"),s("code",[t._v("wholeText")]),t._v("属性与"),s("code",[t._v("data")]),t._v("属性就会有差异，因为这时其实"),s("code",[t._v("<p>")]),t._v("节点下面包含了两个毗邻的文本节点。")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("el"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("removeChild")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("para"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("childNodes"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token number"}},[t._v("1")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nel"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("firstChild"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("wholeText "),s("span",{attrs:{class:"token comment"}},[t._v('// "A C"')]),t._v("\nel"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("firstChild"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data "),s("span",{attrs:{class:"token comment"}},[t._v('// "A "')]),t._v("\n")])]),s("h3",{attrs:{id:"length"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#length","aria-hidden":"true"}},[t._v("#")]),t._v(" length")]),s("p",[s("code",[t._v("length")]),t._v("属性返回当前文本节点的文本长度。")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{attrs:{class:"token class-name"}},[t._v("Text")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v("'Hello'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),s("span",{attrs:{class:"token comment"}},[t._v("// 5")]),t._v("\n")])]),s("h3",{attrs:{id:"nextelementsibling，previouselementsibling"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nextelementsibling，previouselementsibling","aria-hidden":"true"}},[t._v("#")]),t._v(" nextElementSibling，previousElementSibling")]),s("p",[s("code",[t._v("nextElementSibling")]),t._v("属性返回紧跟在当前文本节点后面的那个同级元素节点。如果取不到元素节点，则返回"),s("code",[t._v("null")]),t._v("。")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token comment"}},[t._v("// HTML 为")]),t._v("\n"),s("span",{attrs:{class:"token comment"}},[t._v("// <div>Hello <em>World</em></div>")]),t._v("\n"),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" tn "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("querySelector")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v("'div'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("firstChild"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ntn"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("nextElementSibling\n"),s("span",{attrs:{class:"token comment"}},[t._v("// <em>World</em>")]),t._v("\n")])]),s("p",[s("code",[t._v("previousElementSibling")]),t._v("属性返回当前文本节点前面最近的同级元素节点。如果取不到元素节点，则返回"),s("code",[t._v("null：")]),t._v("。")]),s("h2",{attrs:{id:"text-节点的方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#text-节点的方法","aria-hidden":"true"}},[t._v("#")]),t._v(" Text 节点的方法")]),s("h3",{attrs:{id:"appenddata-，deletedata-，insertdata-，replacedata-，substringdata"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#appenddata-，deletedata-，insertdata-，replacedata-，substringdata","aria-hidden":"true"}},[t._v("#")]),t._v(" appendData()，deleteData()，insertData()，replaceData()，subStringData()")]),s("p",[t._v("以下5个方法都是编辑"),s("code",[t._v("Text")]),t._v("节点文本内容的方法。")]),s("ul",[s("li",[s("code",[t._v("appendData()")]),t._v("：在"),s("code",[t._v("Text")]),t._v("节点尾部追加字符串。")]),s("li",[s("code",[t._v("deleteData()")]),t._v("：删除"),s("code",[t._v("Text")]),t._v("节点内部的子字符串，第一个参数为子字符串开始位置，第二个参数为子字符串长度。")]),s("li",[s("code",[t._v("insertData()")]),t._v("：在"),s("code",[t._v("Text")]),t._v("节点插入字符串，第一个参数为插入位置，第二个参数为插入的子字符串。")]),s("li",[s("code",[t._v("replaceData()")]),t._v("：用于替换文本，第一个参数为替换开始位置，第二个参数为需要被替换掉的长度，第三个参数为新加入的字符串。")]),s("li",[s("code",[t._v("subStringData()")]),t._v("：用于获取子字符串，第一个参数为子字符串在"),s("code",[t._v("Text")]),t._v("节点中的开始位置，第二个参数为子字符串长度。")])]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token comment"}},[t._v("// HTML 代码为")]),t._v("\n"),s("span",{attrs:{class:"token comment"}},[t._v("// <p>Hello World</p>")]),t._v("\n"),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" pElementText "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("querySelector")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v("'p'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("firstChild"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\npElementText"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("appendData")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v("'!'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{attrs:{class:"token comment"}},[t._v("// 页面显示 Hello World!")]),t._v("\npElementText"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("deleteData")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token number"}},[t._v("7")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("5")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{attrs:{class:"token comment"}},[t._v("// 页面显示 Hello W")]),t._v("\npElementText"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("insertData")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token number"}},[t._v("7")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v("'Hello '")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{attrs:{class:"token comment"}},[t._v("// 页面显示 Hello WHello")]),t._v("\npElementText"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("replaceData")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token number"}},[t._v("7")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("5")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v("'World'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{attrs:{class:"token comment"}},[t._v("// 页面显示 Hello WWorld")]),t._v("\npElementText"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("substringData")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token number"}},[t._v("7")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("10")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),s("span",{attrs:{class:"token comment"}},[t._v('// 页面显示不变，返回"World "')]),t._v("\n")])]),s("h3",{attrs:{id:"remove"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#remove","aria-hidden":"true"}},[t._v("#")]),t._v(" remove()")]),s("p",[s("code",[t._v("remove")]),t._v("方法用于移除当前"),s("code",[t._v("Text")]),t._v("节点。")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token comment"}},[t._v("// HTML 代码为")]),t._v("\n"),s("span",{attrs:{class:"token comment"}},[t._v("// <p>Hello World</p>")]),t._v("\ndocument"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("querySelector")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v("'p'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("firstChild"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("remove")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{attrs:{class:"token comment"}},[t._v("// 现在 HTML 代码为")]),t._v("\n"),s("span",{attrs:{class:"token comment"}},[t._v("// <p></p>")]),t._v("\n")])]),s("h3",{attrs:{id:"splittext"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#splittext","aria-hidden":"true"}},[t._v("#")]),t._v(" splitText()")]),s("p",[s("code",[t._v("splitText")]),t._v("方法将"),s("code",[t._v("Text")]),t._v("节点一分为二，变成两个毗邻的"),s("code",[t._v("Text")]),t._v("节点。它的参数就是分割位置（从零开始），分割到该位置的字符前结束。如果分割位置不存在，将报错。")]),s("p",[t._v("分割后，该方法返回分割位置后方的字符串，而原"),s("code",[t._v("Text")]),t._v("节点变成只包含分割位置前方的字符串。")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token comment"}},[t._v('// html 代码为 <p id="p">foobar</p>')]),t._v("\n"),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" p "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("getElementById")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v("'p'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" textnode "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" p"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("firstChild"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" newText "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" textnode"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("splitText")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token number"}},[t._v("3")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nnewText "),s("span",{attrs:{class:"token comment"}},[t._v('// "bar"')]),t._v("\ntextnode "),s("span",{attrs:{class:"token comment"}},[t._v('// "foo"')]),t._v("\n")])]),s("p",[t._v("父节点的"),s("code",[t._v("normalize")]),t._v("方法可以将毗邻的两个"),s("code",[t._v("Text")]),t._v("节点合并。")]),s("p",[t._v("接上面的例子，文本节点的"),s("code",[t._v("splitText")]),t._v("方法将一个"),s("code",[t._v("Text")]),t._v("节点分割成两个，父元素的"),s("code",[t._v("normalize")]),t._v("方法可以实现逆操作，将它们合并。")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("p"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("childNodes"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),s("span",{attrs:{class:"token comment"}},[t._v("// 2")]),t._v("\n\n"),s("span",{attrs:{class:"token comment"}},[t._v("// 将毗邻的两个 Text 节点合并")]),t._v("\np"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("normalize")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\np"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("childNodes"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),s("span",{attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\n")])]),s("h2",{attrs:{id:"documentfragment-节点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#documentfragment-节点","aria-hidden":"true"}},[t._v("#")]),t._v(" DocumentFragment 节点")]),s("p",[s("code",[t._v("DocumentFragment")]),t._v("节点代表一个文档的片段，本身就是一个完整的 DOM 树形结构。它没有父节点，"),s("code",[t._v("parentNode")]),t._v("返回"),s("code",[t._v("null")]),t._v("，但是可以插入任意数量的子节点。它不属于当前文档，操作"),s("code",[t._v("DocumentFragment")]),t._v("节点，要比直接操作 DOM 树快得多。")]),s("p",[t._v("它一般用于构建一个 DOM 结构，然后插入当前文档。"),s("code",[t._v("document.createDocumentFragment")]),t._v("方法，以及浏览器原生的"),s("code",[t._v("DocumentFragment")]),t._v("构造函数，可以创建一个空的"),s("code",[t._v("DocumentFragment")]),t._v("节点。然后再使用其他 DOM 方法，向其添加子节点。")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" docFrag "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("createDocumentFragment")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{attrs:{class:"token comment"}},[t._v("// 等同于")]),t._v("\n"),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" docFrag "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{attrs:{class:"token class-name"}},[t._v("DocumentFragment")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" li "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("createElement")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v("'li'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nli"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("textContent "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v("'Hello World'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ndocFrag"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("appendChild")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("li"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\ndocument"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("querySelector")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v("'ul'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("appendChild")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("docFrag"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),s("p",[t._v("上面代码创建了一个"),s("code",[t._v("DocumentFragment")]),t._v("节点，然后将一个"),s("code",[t._v("li")]),t._v("节点添加在它里面，最后将"),s("code",[t._v("DocumentFragment")]),t._v("节点移动到原文档。")]),s("p",[t._v("注意，"),s("code",[t._v("DocumentFragment")]),t._v("节点本身不能被插入当前文档。当它作为"),s("code",[t._v("appendChild()")]),t._v("、"),s("code",[t._v("insertBefore()")]),t._v("、"),s("code",[t._v("replaceChild()")]),t._v("等方法的参数时，是它的所有子节点插入当前文档，而不是它自身。一旦"),s("code",[t._v("DocumentFragment")]),t._v("节点被添加进当前文档，它自身就变成了空节点（"),s("code",[t._v("textContent")]),t._v("属性为空字符串），可以被再次使用。如果想要保存"),s("code",[t._v("DocumentFragment")]),t._v("节点的内容，可以使用"),s("code",[t._v("cloneNode")]),t._v("方法。")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("document\n  "),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("queryselector")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v("'ul'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("appendChild")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("docFrag"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("cloneNode")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token boolean"}},[t._v("true")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),s("p",[t._v("上面这样添加"),s("code",[t._v("DocumentFragment")]),t._v("节点进入当前文档，不会清空"),s("code",[t._v("DocumentFragment")]),t._v("节点。")]),s("p",[t._v("下面是一个例子，使用"),s("code",[t._v("DocumentFragment")]),t._v("反转一个指定节点的所有子节点的顺序。")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("reverse")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" f "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("createDocumentFragment")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{attrs:{class:"token keyword"}},[t._v("while")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lastChild"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" f"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("appendChild")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lastChild"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  n"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("appendChild")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("f"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),s("p",[s("code",[t._v("DocumentFragment")]),t._v("节点对象没有自己的属性和方法，全部继承自"),s("code",[t._v("Node")]),t._v("节点和"),s("code",[t._v("ParentNode")]),t._v("接口。也就是说，"),s("code",[t._v("DocumentFragment")]),t._v("节点比"),s("code",[t._v("Node")]),t._v("节点多出以下四个属性。")]),s("ul",[s("li",[s("code",[t._v("children")]),t._v("：返回一个动态的"),s("code",[t._v("HTMLCollection")]),t._v("集合对象，包括当前"),s("code",[t._v("DocumentFragment")]),t._v("对象的所有子元素节点。")]),s("li",[s("code",[t._v("firstElementChild")]),t._v("：返回当前"),s("code",[t._v("DocumentFragment")]),t._v("对象的第一个子元素节点，如果没有则返回"),s("code",[t._v("null")]),t._v("。")]),s("li",[s("code",[t._v("lastElementChild")]),t._v("：返回当前"),s("code",[t._v("DocumentFragment")]),t._v("对象的最后一个子元素节点，如果没有则返回"),s("code",[t._v("null")]),t._v("。")]),s("li",[s("code",[t._v("childElementCount")]),t._v("：返回当前"),s("code",[t._v("DocumentFragment")]),t._v("对象的所有子元素数量。")])])])}],!1,null,null,null);a.default=e.exports}}]);