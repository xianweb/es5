(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{73:function(t,a,s){"use strict";s.r(a);var n=s(0),e=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#概述","aria-hidden":"true"}},[t._v("#")]),t._v(" 概述")]),s("h2",{attrs:{id:"基本概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基本概念","aria-hidden":"true"}},[t._v("#")]),t._v(" 基本概念")]),s("h3",{attrs:{id:"dom"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dom","aria-hidden":"true"}},[t._v("#")]),t._v(" DOM")]),s("p",[t._v("DOM 是 JavaScript 操作网页的接口，全称为“文档对象模型”（Document Object Model）。它的作用是将网页转为一个 JavaScript 对象，从而可以用脚本进行各种操作（比如增删内容）。")]),s("p",[t._v("浏览器会根据 DOM 模型，将结构化文档（比如 HTML 和 XML）解析成一系列的节点，再由这些节点组成一个树状结构（DOM Tree）。所有的节点和最终的树状结构，都有规范的对外接口。")]),s("p",[t._v("DOM 只是一个接口规范，可以用各种语言实现。所以严格地说，DOM 不是 JavaScript 语法的一部分，但是 DOM 操作是 JavaScript 最常见的任务，离开了 DOM，JavaScript 就无法控制网页。另一方面，JavaScript 也是最常用于 DOM 操作的语言。后面介绍的就是 JavaScript 对 DOM 标准的实现和用法。")]),s("h3",{attrs:{id:"节点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#节点","aria-hidden":"true"}},[t._v("#")]),t._v(" 节点")]),s("p",[t._v("DOM 的最小组成单位叫做节点（node）。文档的树形结构（DOM 树），就是由各种不同类型的节点组成。每个节点可以看作是文档树的一片叶子。")]),s("p",[t._v("节点的类型有七种。")]),s("ul",[s("li",[s("code",[t._v("Document")]),t._v("：整个文档树的顶层节点")]),s("li",[s("code",[t._v("DocumentType")]),t._v("："),s("code",[t._v("doctype")]),t._v("标签（比如"),s("code",[t._v("<!DOCTYPE html>")]),t._v("）")]),s("li",[s("code",[t._v("Element")]),t._v("：网页的各种HTML标签（比如"),s("code",[t._v("<body>")]),t._v("、"),s("code",[t._v("<a>")]),t._v("等）")]),s("li",[s("code",[t._v("Attribute")]),t._v("：网页元素的属性（比如"),s("code",[t._v('class="right"')]),t._v("）")]),s("li",[s("code",[t._v("Text")]),t._v("：标签之间或标签包含的文本")]),s("li",[s("code",[t._v("Comment")]),t._v("：注释")]),s("li",[s("code",[t._v("DocumentFragment")]),t._v("：文档的片段")])]),s("p",[t._v("浏览器提供一个原生的节点对象"),s("code",[t._v("Node")]),t._v("，上面这七种节点都继承了"),s("code",[t._v("Node")]),t._v("，因此具有一些共同的属性和方法。")]),s("h3",{attrs:{id:"节点树"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#节点树","aria-hidden":"true"}},[t._v("#")]),t._v(" 节点树")]),s("p",[t._v("一个文档的所有节点，按照所在的层级，可以抽象成一种树状结构。这种树状结构就是 DOM 树。它有一个顶层节点，下一层都是顶层节点的子节点，然后子节点又有自己的子节点，就这样层层衍生出一个金字塔结构，倒过来就像一棵树。")]),s("p",[t._v("浏览器原生提供"),s("code",[t._v("document")]),t._v("节点，代表整个文档。")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("document\n"),s("span",{attrs:{class:"token comment"}},[t._v("// 整个文档树")]),t._v("\n")])]),s("p",[t._v("文档的第一层只有一个节点，就是 HTML 网页的第一个标签"),s("code",[t._v("<html>")]),t._v("，它构成了树结构的根节点（root node），其他 HTML 标签节点都是它的下级节点。")]),s("p",[t._v("除了根节点，其他节点都有三种层级关系。")]),s("ul",[s("li",[t._v("父节点关系（parentNode）：直接的那个上级节点")]),s("li",[t._v("子节点关系（childNodes）：直接的下级节点")]),s("li",[t._v("同级节点关系（sibling）：拥有同一个父节点的节点")])]),s("p",[t._v("DOM 提供操作接口，用来获取这三种关系的节点。比如，子节点接口包括"),s("code",[t._v("firstChild")]),t._v("（第一个子节点）和"),s("code",[t._v("lastChild")]),t._v("（最后一个子节点）等属性，同级节点接口包括"),s("code",[t._v("nextSibling")]),t._v("（紧邻在后的那个同级节点）和"),s("code",[t._v("previousSibling")]),t._v("（紧邻在前的那个同级节点）属性。")]),s("h2",{attrs:{id:"node-接口的属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#node-接口的属性","aria-hidden":"true"}},[t._v("#")]),t._v(" Node 接口的属性")]),s("p",[t._v("所有 DOM 节点都继承了 Node 接口，拥有一些共同的属性和方法。这是 DOM 操作的基础。")]),s("h3",{attrs:{id:"node-nodetype"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#node-nodetype","aria-hidden":"true"}},[t._v("#")]),t._v(" Node.nodeType")]),s("p",[s("code",[t._v("nodeType")]),t._v("属性返回一个整数值，表示节点的类型。")]),s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("document.nodeType // 9\n")])]),s("p",[t._v("上面代码中，文档节点的类型值为9。")]),s("p",[t._v("Node 对象定义了几个常量，对应这些类型值。")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("document"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("nodeType "),s("span",{attrs:{class:"token operator"}},[t._v("===")]),t._v(" Node"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token constant"}},[t._v("DOCUMENT_NODE")]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])]),s("p",[t._v("上面代码中，文档节点的"),s("code",[t._v("nodeType")]),t._v("属性等于常量"),s("code",[t._v("Node.DOCUMENT_NODE")]),t._v("。")]),s("p",[t._v("不同节点的"),s("code",[t._v("nodeType")]),t._v("属性值和对应的常量如下。")]),s("ul",[s("li",[t._v("文档节点（document）：9，对应常量"),s("code",[t._v("Node.DOCUMENT_NODE")])]),s("li",[t._v("元素节点（element）：1，对应常量"),s("code",[t._v("Node.ELEMENT_NODE")])]),s("li",[t._v("属性节点（attr）：2，对应常量"),s("code",[t._v("Node.ATTRIBUTE_NODE")])]),s("li",[t._v("文本节点（text）：3，对应常量"),s("code",[t._v("Node.TEXT_NODE")])]),s("li",[t._v("文档片断节点（DocumentFragment）：11，对应常量"),s("code",[t._v("Node.DOCUMENT_FRAGMENT_NODE")])]),s("li",[t._v("文档类型节点（DocumentType）：10，对应常量"),s("code",[t._v("Node.DOCUMENT_TYPE_NODE")])]),s("li",[t._v("注释节点（Comment）：8，对应常量"),s("code",[t._v("Node.COMMENT_NODE")])])]),s("p",[t._v("确定节点类型时，使用"),s("code",[t._v("nodeType")]),t._v("属性是常用方法。")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" node "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("documentElement"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("firstChild"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("nodeType "),s("span",{attrs:{class:"token operator"}},[t._v("===")]),t._v(" Node"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token constant"}},[t._v("ELEMENT_NODE")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("log")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v("'该节点是元素节点'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),s("h3",{attrs:{id:"node-nodename"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#node-nodename","aria-hidden":"true"}},[t._v("#")]),t._v(" Node.nodeName")]),s("p",[s("code",[t._v("nodeName")]),t._v("属性返回节点的名称。")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token comment"}},[t._v("// HTML 代码如下")]),t._v("\n"),s("span",{attrs:{class:"token comment"}},[t._v('// <div id="d1">hello world</div>')]),t._v("\n"),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" div "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("getElementById")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v("'d1'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ndiv"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("nodeName "),s("span",{attrs:{class:"token comment"}},[t._v('// "DIV"')]),t._v("\n")])]),s("p",[t._v("上面代码中，元素节点"),s("code",[t._v("<div>")]),t._v("的"),s("code",[t._v("nodeName")]),t._v("属性就是大写的标签名"),s("code",[t._v("DIV")]),t._v("。")]),s("p",[t._v("不同节点的"),s("code",[t._v("nodeName")]),t._v("属性值如下。")]),s("ul",[s("li",[t._v("文档节点（document）："),s("code",[t._v("#document")])]),s("li",[t._v("元素节点（element）：大写的标签名")]),s("li",[t._v("属性节点（attr）：属性的名称")]),s("li",[t._v("文本节点（text）："),s("code",[t._v("#text")])]),s("li",[t._v("文档片断节点（DocumentFragment）："),s("code",[t._v("#document-fragment")])]),s("li",[t._v("文档类型节点（DocumentType）：文档的类型")]),s("li",[t._v("注释节点（Comment）："),s("code",[t._v("#comment")])])]),s("h3",{attrs:{id:"node-nodevalue"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#node-nodevalue","aria-hidden":"true"}},[t._v("#")]),t._v(" Node.nodeValue")]),s("p",[s("code",[t._v("nodeValue")]),t._v("属性返回一个字符串，表示当前节点本身的文本值，该属性可读写。")]),s("p",[t._v("只有文本节点（text）和注释节点（comment）有文本值，因此这两类节点的"),s("code",[t._v("nodeValue")]),t._v("可以返回结果，其他类型的节点一律返回"),s("code",[t._v("null")]),t._v("。同样的，也只有这两类节点可以设置"),s("code",[t._v("nodeValue")]),t._v("属性的值，其他类型的节点设置无效。")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token comment"}},[t._v("// HTML 代码如下")]),t._v("\n"),s("span",{attrs:{class:"token comment"}},[t._v('// <div id="d1">hello world</div>')]),t._v("\n"),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" div "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("getElementById")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v("'d1'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ndiv"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("nodeValue "),s("span",{attrs:{class:"token comment"}},[t._v("// null")]),t._v("\ndiv"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("firstChild"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("nodeValue "),s("span",{attrs:{class:"token comment"}},[t._v('// "hello world"')]),t._v("\n")])]),s("p",[t._v("上面代码中，"),s("code",[t._v("div")]),t._v("是元素节点，"),s("code",[t._v("nodeValue")]),t._v("属性返回"),s("code",[t._v("null")]),t._v("。"),s("code",[t._v("div.firstChild")]),t._v("是文本节点，所以可以返回文本值。")]),s("h3",{attrs:{id:"node-textcontent"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#node-textcontent","aria-hidden":"true"}},[t._v("#")]),t._v(" Node.textContent")]),s("p",[s("code",[t._v("textContent")]),t._v("属性返回当前节点和它的所有后代节点的文本内容。")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token comment"}},[t._v("// HTML 代码为")]),t._v("\n"),s("span",{attrs:{class:"token comment"}},[t._v('// <div id="divA">This is <span>some</span> text</div>')]),t._v("\n\ndocument"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("getElementById")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v("'divA'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("textContent\n"),s("span",{attrs:{class:"token comment"}},[t._v("// This is some text")]),t._v("\n")])]),s("p",[s("code",[t._v("textContent")]),t._v("属性自动忽略当前节点内部的 HTML 标签，返回所有文本内容。")]),s("p",[t._v("该属性是可读写的，设置该属性的值，会用一个新的文本节点，替换所有原来的子节点。它还有一个好处，就是自动对 HTML 标签转义。这很适合用于用户提供的内容。")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("document"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("getElementById")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v("'foo'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("textContent "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v("'<p>GoodBye!</p>'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),s("p",[t._v("上面代码在插入文本时，会将"),s("code",[t._v("<p>")]),t._v("标签解释为文本，而不会当作标签处理。")]),s("p",[t._v("对于文本节点（text）和注释节点（comment），"),s("code",[t._v("textContent")]),t._v("属性的值与"),s("code",[t._v("nodeValue")]),t._v("属性相同。对于其他类型的节点，该属性会将每个子节点的内容连接在一起返回，但是不包括注释节点。如果一个节点没有子节点，则返回空字符串。")]),s("p",[t._v("文档节点（document）和文档类型节点（doctype）的"),s("code",[t._v("textContent")]),t._v("属性为"),s("code",[t._v("null")]),t._v("。如果要读取整个文档的内容，可以使用"),s("code",[t._v("document.documentElement.textContent")]),t._v("。")]),s("h3",{attrs:{id:"node-baseuri"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#node-baseuri","aria-hidden":"true"}},[t._v("#")]),t._v(" Node.baseURI")]),s("p",[s("code",[t._v("baseURI")]),t._v("属性返回一个字符串，表示当前网页的绝对路径。浏览器根据这个属性，计算网页上的相对路径的 URL。该属性为只读。")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token comment"}},[t._v("// 当前网页的网址为")]),t._v("\n"),s("span",{attrs:{class:"token comment"}},[t._v("// http://www.example.com/index.html")]),t._v("\ndocument"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("baseURI\n"),s("span",{attrs:{class:"token comment"}},[t._v('// "http://www.example.com/index.html"')]),t._v("\n")])]),s("p",[t._v("如果无法读到网页的 URL，"),s("code",[t._v("baseURI")]),t._v("属性返回"),s("code",[t._v("null")]),t._v("。")]),s("p",[t._v("该属性的值一般由当前网址的 URL（即"),s("code",[t._v("window.location")]),t._v("属性）决定，但是可以使用 HTML 的"),s("code",[t._v("<base>")]),t._v("标签，改变该属性的值。")]),s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("base")]),t._v(" "),s("span",{attrs:{class:"token attr-name"}},[t._v("href")]),s("span",{attrs:{class:"token attr-value"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{attrs:{class:"token punctuation"}},[t._v('"')]),t._v("http://www.example.com/page.html"),s("span",{attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),s("p",[t._v("设置了以后，"),s("code",[t._v("baseURI")]),t._v("属性就返回"),s("code",[t._v("<base>")]),t._v("标签设置的值。")]),s("h3",{attrs:{id:"node-ownerdocument"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#node-ownerdocument","aria-hidden":"true"}},[t._v("#")]),t._v(" Node.ownerDocument")]),s("p",[s("code",[t._v("Node.ownerDocument")]),t._v("属性返回当前节点所在的顶层文档对象，即"),s("code",[t._v("document")]),t._v("对象。")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" d "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" p"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ownerDocument"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nd "),s("span",{attrs:{class:"token operator"}},[t._v("===")]),t._v(" document "),s("span",{attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])]),s("p",[s("code",[t._v("document")]),t._v("对象本身的"),s("code",[t._v("ownerDocument")]),t._v("属性，返回"),s("code",[t._v("null")]),t._v("。")]),s("h3",{attrs:{id:"node-nextsibling"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#node-nextsibling","aria-hidden":"true"}},[t._v("#")]),t._v(" Node.nextSibling")]),s("p",[s("code",[t._v("Node.nextSibling")]),t._v("属性返回紧跟在当前节点后面的第一个同级节点。如果当前节点后面没有同级节点，则返回"),s("code",[t._v("null")]),t._v("。")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token comment"}},[t._v("// HTML 代码如下")]),t._v("\n"),s("span",{attrs:{class:"token comment"}},[t._v('// <div id="d1">hello</div><div id="d2">world</div>')]),t._v("\n"),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" div1 "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("getElementById")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v("'d1'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" div2 "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("getElementById")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v("'d2'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nd1"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("nextSibling "),s("span",{attrs:{class:"token operator"}},[t._v("===")]),t._v(" d2 "),s("span",{attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])]),s("p",[t._v("上面代码中，"),s("code",[t._v("d1.nextSibling")]),t._v("就是紧跟在"),s("code",[t._v("d1")]),t._v("后面的同级节点"),s("code",[t._v("d2")]),t._v("。")]),s("p",[t._v("注意，该属性还包括文本节点和评论节点。因此如果当前节点后面有空格，该属性会返回一个文本节点，内容为空格。")]),s("p",[s("code",[t._v("nextSibling")]),t._v("属性可以用来遍历所有子节点。")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" el "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("getElementById")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v("'div1'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("firstChild"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("el "),s("span",{attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("null")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("log")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("el"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("nodeName"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  el "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" el"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("nextSibling"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),s("p",[t._v("上面代码遍历"),s("code",[t._v("div1")]),t._v("节点的所有子节点。")]),s("h3",{attrs:{id:"node-previoussibling"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#node-previoussibling","aria-hidden":"true"}},[t._v("#")]),t._v(" Node.previousSibling")]),s("p",[s("code",[t._v("previousSibling")]),t._v("属性返回当前节点前面的、距离最近的一个同级节点。如果当前节点前面没有同级节点，则返回"),s("code",[t._v("null")]),t._v("。")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token comment"}},[t._v("// HTML 代码如下")]),t._v("\n"),s("span",{attrs:{class:"token comment"}},[t._v('// <div id="d1">hello</div><div id="d2">world</div>')]),t._v("\n"),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" div1 "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("getElementById")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v("'d1'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" div2 "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("getElementById")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v("'d2'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nd2"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("previousSibling "),s("span",{attrs:{class:"token operator"}},[t._v("===")]),t._v(" d1 "),s("span",{attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])]),s("p",[t._v("上面代码中，"),s("code",[t._v("d2.previousSibling")]),t._v("就是"),s("code",[t._v("d2")]),t._v("前面的同级节点"),s("code",[t._v("d1")]),t._v("。")]),s("p",[t._v("注意，该属性还包括文本节点和评论节点。因此如果当前节点前面有空格，该属性会返回一个文本节点，内容为空格。")]),s("h3",{attrs:{id:"node-parentnode"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#node-parentnode","aria-hidden":"true"}},[t._v("#")]),t._v(" Node.parentNode")]),s("p",[s("code",[t._v("parentNode")]),t._v("属性返回当前节点的父节点。对于一个节点来说，它的父节点只可能是三种类型：元素节点（element）、文档节点（document）和文档片段节点（documentfragment）。")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("parentNode"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  node"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("parentNode"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("removeChild")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),s("p",[t._v("上面代码中，通过"),s("code",[t._v("node.parentNode")]),t._v("属性将"),s("code",[t._v("node")]),t._v("节点从文档里面移除。")]),s("p",[t._v("文档节点（document）和文档片段节点（documentfragment）的父节点都是"),s("code",[t._v("null")]),t._v("。另外，对于那些生成后还没插入 DOM 树的节点，父节点也是"),s("code",[t._v("null")]),t._v("。")]),s("h3",{attrs:{id:"node-parentelement"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#node-parentelement","aria-hidden":"true"}},[t._v("#")]),t._v(" Node.parentElement")]),s("p",[s("code",[t._v("parentElement")]),t._v("属性返回当前节点的父元素节点。如果当前节点没有父节点，或者父节点类型不是元素节点，则返回"),s("code",[t._v("null")]),t._v("。")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("parentElement"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  node"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("parentElement"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("color "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v("'red'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),s("p",[t._v("上面代码中，父元素节点的样式设定了红色。")]),s("p",[t._v("由于父节点只可能是三种类型：元素节点、文档节点（document）和文档片段节点（documentfragment）。"),s("code",[t._v("parentElement")]),t._v("属性相当于把后两种父节点都排除了。")]),s("h3",{attrs:{id:"node-firstchild，node-lastchild"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#node-firstchild，node-lastchild","aria-hidden":"true"}},[t._v("#")]),t._v(" Node.firstChild，Node.lastChild")]),s("p",[s("code",[t._v("firstChild")]),t._v("属性返回当前节点的第一个子节点，如果当前节点没有子节点，则返回"),s("code",[t._v("null")]),t._v("。")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token comment"}},[t._v("// HTML 代码如下")]),t._v("\n"),s("span",{attrs:{class:"token comment"}},[t._v('// <p id="p1"><span>First span</span></p>')]),t._v("\n"),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" p1 "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("getElementById")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v("'p1'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\np1"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("firstChild"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("nodeName "),s("span",{attrs:{class:"token comment"}},[t._v('// "SPAN"')]),t._v("\n")])]),s("p",[t._v("上面代码中，"),s("code",[t._v("p")]),t._v("元素的第一个子节点是"),s("code",[t._v("span")]),t._v("元素。")]),s("p",[t._v("注意，"),s("code",[t._v("firstChild")]),t._v("返回的除了元素节点，还可能是文本节点或评论节点。")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token comment"}},[t._v("// HTML 代码如下")]),t._v("\n"),s("span",{attrs:{class:"token comment"}},[t._v('// <p id="p1">')]),t._v("\n"),s("span",{attrs:{class:"token comment"}},[t._v("//   <span>First span</span>")]),t._v("\n"),s("span",{attrs:{class:"token comment"}},[t._v("//  </p>")]),t._v("\n"),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" p1 "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("getElementById")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v("'p1'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\np1"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("firstChild"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("nodeName "),s("span",{attrs:{class:"token comment"}},[t._v('// "#text"')]),t._v("\n")])]),s("p",[t._v("上面代码中，"),s("code",[t._v("p")]),t._v("元素与"),s("code",[t._v("span")]),t._v("元素之间有空白字符，这导致"),s("code",[t._v("firstChild")]),t._v("返回的是文本节点。")]),s("p",[s("code",[t._v("lastChild")]),t._v("属性返回当前节点的最后一个子节点，如果当前节点没有子节点，则返回"),s("code",[t._v("null")]),t._v("。用法与"),s("code",[t._v("firstChild")]),t._v("属性相同。")]),s("h3",{attrs:{id:"node-childnodes"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#node-childnodes","aria-hidden":"true"}},[t._v("#")]),t._v(" Node.childNodes")]),s("p",[s("code",[t._v("childNodes")]),t._v("属性返回一个类似数组的对象（"),s("code",[t._v("NodeList")]),t._v("集合），成员包括当前节点的所有子节点。")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" children "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("querySelector")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v("'ul'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("childNodes"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),s("p",[t._v("上面代码中，"),s("code",[t._v("children")]),t._v("就是"),s("code",[t._v("ul")]),t._v("元素的所有子节点。")]),s("p",[t._v("使用该属性，可以遍历某个节点的所有子节点。")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" div "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("getElementById")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v("'div1'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" children "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" div"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("childNodes"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("0")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v(" children"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{attrs:{class:"token operator"}},[t._v("++")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),s("p",[t._v("文档节点（document）就有两个子节点：文档类型节点（docType）和 HTML 根元素节点。")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" children "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("childNodes"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("0")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v(" children"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{attrs:{class:"token operator"}},[t._v("++")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("log")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("children"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("nodeType"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{attrs:{class:"token comment"}},[t._v("// 10")]),t._v("\n"),s("span",{attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\n")])]),s("p",[t._v("上面代码中，文档节点的第一个子节点的类型是10（即文档类型节点），第二个子节点的类型是1（即元素节点）。")]),s("p",[t._v("注意，除了元素节点，"),s("code",[t._v("childNodes")]),t._v("属性的返回值还包括文本节点和注释节点。如果当前节点不包括任何子节点，则返回一个空的"),s("code",[t._v("NodeList")]),t._v("集合。由于"),s("code",[t._v("NodeList")]),t._v("对象是一个动态集合，一旦子节点发生变化，立刻会反映在返回结果之中。")]),s("h3",{attrs:{id:"node-isconnected"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#node-isconnected","aria-hidden":"true"}},[t._v("#")]),t._v(" Node.isConnected")]),s("p",[s("code",[t._v("isConnected")]),t._v("属性返回一个布尔值，表示当前节点是否在文档之中。")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" test "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("createElement")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v("'p'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ntest"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("isConnected "),s("span",{attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n\ndocument"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("appendChild")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("test"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ntest"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("isConnected "),s("span",{attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])]),s("p",[t._v("上面代码中，"),s("code",[t._v("test")]),t._v("节点是脚本生成的节点，没有插入文档之前，"),s("code",[t._v("isConnected")]),t._v("属性返回"),s("code",[t._v("false")]),t._v("，插入之后返回"),s("code",[t._v("true")]),t._v("。")]),s("h2",{attrs:{id:"node-接口的方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#node-接口的方法","aria-hidden":"true"}},[t._v("#")]),t._v(" Node 接口的方法")]),s("h3",{attrs:{id:"node-appendchild"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#node-appendchild","aria-hidden":"true"}},[t._v("#")]),t._v(" Node.appendChild()")]),s("p",[s("code",[t._v("appendChild")]),t._v("方法接受一个节点对象作为参数，将其作为最后一个子节点，插入当前节点。该方法的返回值就是插入文档的子节点。")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" p "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("createElement")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v("'p'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ndocument"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("appendChild")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("p"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),s("p",[t._v("上面代码新建一个"),s("code",[t._v("<p>")]),t._v("节点，将其插入"),s("code",[t._v("document.body")]),t._v("的尾部。")]),s("p",[t._v("如果参数节点是 DOM 已经存在的节点，"),s("code",[t._v("appendChild")]),t._v("方法会将其从原来的位置，移动到新位置。")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" element "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" document\n  "),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("createElement")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v("'div'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("appendChild")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("document"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("createElement")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v("'b'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),s("p",[t._v("上面代码的返回值是"),s("code",[t._v("<b></b>")]),t._v("，而不是"),s("code",[t._v("<div></div>")]),t._v("。")]),s("p",[t._v("如果"),s("code",[t._v("appendChild")]),t._v("方法的参数是"),s("code",[t._v("DocumentFragment")]),t._v("节点，那么插入的是"),s("code",[t._v("DocumentFragment")]),t._v("的所有子节点，而不是"),s("code",[t._v("DocumentFragment")]),t._v("节点本身。返回值是一个空的"),s("code",[t._v("DocumentFragment")]),t._v("节点。")]),s("h3",{attrs:{id:"node-haschildnodes"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#node-haschildnodes","aria-hidden":"true"}},[t._v("#")]),t._v(" Node.hasChildNodes()")]),s("p",[s("code",[t._v("hasChildNodes")]),t._v("方法返回一个布尔值，表示当前节点是否有子节点。")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" foo "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("getElementById")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v("'foo'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("foo"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("hasChildNodes")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  foo"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("removeChild")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("foo"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("childNodes"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token number"}},[t._v("0")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),s("p",[t._v("上面代码表示，如果"),s("code",[t._v("foo")]),t._v("节点有子节点，就移除第一个子节点。")]),s("p",[t._v("注意，子节点包括所有节点，哪怕节点只包含一个空格，"),s("code",[t._v("hasChildNodes")]),t._v("方法也会返回"),s("code",[t._v("true")]),t._v("。")]),s("p",[t._v("判断一个节点有没有子节点，有许多种方法，下面是其中的三种。")]),s("ul",[s("li",[s("code",[t._v("node.hasChildNodes()")])]),s("li",[s("code",[t._v("node.firstChild !== null")])]),s("li",[s("code",[t._v("node.childNodes && node.childNodes.length > 0")])])]),s("p",[s("code",[t._v("hasChildNodes")]),t._v("方法结合"),s("code",[t._v("firstChild")]),t._v("属性和"),s("code",[t._v("nextSibling")]),t._v("属性，可以遍历当前节点的所有后代节点。")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("DOMComb")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("parent"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" callback"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("parent"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("hasChildNodes")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" node "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" parent"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("firstChild"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" node"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" node "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" node"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("nextSibling"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{attrs:{class:"token function"}},[t._v("DOMComb")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" callback"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{attrs:{class:"token function"}},[t._v("callback")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("parent"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{attrs:{class:"token comment"}},[t._v("// 用法")]),t._v("\n"),s("span",{attrs:{class:"token function"}},[t._v("DOMComb")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("document"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" console"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("log"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),s("p",[t._v("上面代码中，"),s("code",[t._v("DOMComb")]),t._v("函数的第一个参数是某个指定的节点，第二个参数是回调函数。这个回调函数会依次作用于指定节点，以及指定节点的所有后代节点。")]),s("h3",{attrs:{id:"node-clonenode"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#node-clonenode","aria-hidden":"true"}},[t._v("#")]),t._v(" Node.cloneNode()")]),s("p",[s("code",[t._v("cloneNode")]),t._v("方法用于克隆一个节点。它接受一个布尔值作为参数，表示是否同时克隆子节点。它的返回值是一个克隆出来的新节点。")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" cloneUL "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("querySelector")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v("'ul'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("cloneNode")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token boolean"}},[t._v("true")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),s("p",[t._v("该方法有一些使用注意点。")]),s("p",[t._v("（1）克隆一个节点，会拷贝该节点的所有属性，但是会丧失"),s("code",[t._v("addEventListener")]),t._v("方法和"),s("code",[t._v("on-")]),t._v("属性（即"),s("code",[t._v("node.onclick = fn")]),t._v("），添加在这个节点上的事件回调函数。")]),s("p",[t._v("（2）该方法返回的节点不在文档之中，即没有任何父节点，必须使用诸如"),s("code",[t._v("Node.appendChild")]),t._v("这样的方法添加到文档之中。")]),s("p",[t._v("（3）克隆一个节点之后，DOM 有可能出现两个有相同"),s("code",[t._v("id")]),t._v("属性（即"),s("code",[t._v('id="xxx"')]),t._v("）的网页元素，这时应该修改其中一个元素的"),s("code",[t._v("id")]),t._v("属性。如果原节点有"),s("code",[t._v("name")]),t._v("属性，可能也需要修改。")]),s("h3",{attrs:{id:"node-insertbefore"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#node-insertbefore","aria-hidden":"true"}},[t._v("#")]),t._v(" Node.insertBefore()")]),s("p",[s("code",[t._v("insertBefore")]),t._v("方法用于将某个节点插入父节点内部的指定位置。")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" insertedNode "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" parentNode"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("insertBefore")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("newNode"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" referenceNode"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),s("p",[s("code",[t._v("insertBefore")]),t._v("方法接受两个参数，第一个参数是所要插入的节点"),s("code",[t._v("newNode")]),t._v("，第二个参数是父节点"),s("code",[t._v("parentNode")]),t._v("内部的一个子节点"),s("code",[t._v("referenceNode")]),t._v("。"),s("code",[t._v("newNode")]),t._v("将插在"),s("code",[t._v("referenceNode")]),t._v("这个子节点的前面。返回值是插入的新节点"),s("code",[t._v("newNode")]),t._v("。")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" p "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("createElement")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v("'p'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ndocument"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("insertBefore")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("p"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" document"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("firstChild"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),s("p",[t._v("上面代码中，新建一个"),s("code",[t._v("<p>")]),t._v("节点，插在"),s("code",[t._v("document.body.firstChild")]),t._v("的前面，也就是成为"),s("code",[t._v("document.body")]),t._v("的第一个子节点。")]),s("p",[t._v("如果"),s("code",[t._v("insertBefore")]),t._v("方法的第二个参数为"),s("code",[t._v("null")]),t._v("，则新节点将插在当前节点内部的最后位置，即变成最后一个子节点。")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" p "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("createElement")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v("'p'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ndocument"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("insertBefore")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("p"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("null")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),s("p",[t._v("上面代码中，"),s("code",[t._v("p")]),t._v("将成为"),s("code",[t._v("document.body")]),t._v("的最后一个子节点。这也说明"),s("code",[t._v("insertBefore")]),t._v("的第二个参数不能省略。")]),s("p",[t._v("注意，如果所要插入的节点是当前 DOM 现有的节点，则该节点将从原有的位置移除，插入新的位置。")]),s("p",[t._v("由于不存在"),s("code",[t._v("insertAfter")]),t._v("方法，如果新节点要插在父节点的某个子节点后面，可以用"),s("code",[t._v("insertBefore")]),t._v("方法结合"),s("code",[t._v("nextSibling")]),t._v("属性模拟。")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("parent"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("insertBefore")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s1"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" s2"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("nextSibling"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),s("p",[t._v("上面代码中，"),s("code",[t._v("parent")]),t._v("是父节点，"),s("code",[t._v("s1")]),t._v("是一个全新的节点，"),s("code",[t._v("s2")]),t._v("是可以将"),s("code",[t._v("s1")]),t._v("节点，插在"),s("code",[t._v("s2")]),t._v("节点的后面。如果"),s("code",[t._v("s2")]),t._v("是当前节点的最后一个子节点，则"),s("code",[t._v("s2.nextSibling")]),t._v("返回"),s("code",[t._v("null")]),t._v("，这时"),s("code",[t._v("s1")]),t._v("节点会插在当前节点的最后，变成当前节点的最后一个子节点，等于紧跟在"),s("code",[t._v("s2")]),t._v("的后面。")]),s("p",[t._v("如果要插入的节点是"),s("code",[t._v("DocumentFragment")]),t._v("类型，那么插入的将是"),s("code",[t._v("DocumentFragment")]),t._v("的所有子节点，而不是"),s("code",[t._v("DocumentFragment")]),t._v("节点本身。返回值将是一个空的"),s("code",[t._v("DocumentFragment")]),t._v("节点。")]),s("h3",{attrs:{id:"node-removechild"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#node-removechild","aria-hidden":"true"}},[t._v("#")]),t._v(" Node.removeChild()")]),s("p",[s("code",[t._v("removeChild")]),t._v("方法接受一个子节点作为参数，用于从当前节点移除该子节点。返回值是移除的子节点。")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" divA "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("getElementById")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v("'A'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ndivA"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("parentNode"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("removeChild")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("divA"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),s("p",[t._v("上面代码移除了"),s("code",[t._v("divA")]),t._v("节点。注意，这个方法是在"),s("code",[t._v("divA")]),t._v("的父节点上调用的，不是在"),s("code",[t._v("divA")]),t._v("上调用的。")]),s("p",[t._v("下面是如何移除当前节点的所有子节点。")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" element "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("getElementById")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v("'top'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("element"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("firstChild"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  element"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("removeChild")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("element"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("firstChild"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),s("p",[t._v("被移除的节点依然存在于内存之中，但不再是 DOM 的一部分。所以，一个节点移除以后，依然可以使用它，比如插入到另一个节点下面。")]),s("p",[t._v("如果参数节点不是当前节点的子节点，"),s("code",[t._v("removeChild")]),t._v("方法将报错。")]),s("h3",{attrs:{id:"node-replacechild"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#node-replacechild","aria-hidden":"true"}},[t._v("#")]),t._v(" Node.replaceChild()")]),s("p",[s("code",[t._v("replaceChild")]),t._v("方法用于将一个新的节点，替换当前节点的某一个子节点。")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" replacedNode "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" parentNode"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("replaceChild")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("newChild"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" oldChild"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),s("p",[t._v("上面代码中，"),s("code",[t._v("replaceChild")]),t._v("方法接受两个参数，第一个参数"),s("code",[t._v("newChild")]),t._v("是用来替换的新节点，第二个参数"),s("code",[t._v("oldChild")]),t._v("是将要替换走的子节点。返回值是替换走的那个节点"),s("code",[t._v("oldChild")]),t._v("。")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" divA "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("getElementById")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v("'divA'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" newSpan "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("createElement")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v("'span'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nnewSpan"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("textContent "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v("'Hello World!'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ndivA"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("parentNode"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("replaceChild")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("newSpan"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" divA"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),s("p",[t._v("上面代码是如何将指定节点"),s("code",[t._v("divA")]),t._v("替换走。")]),s("h3",{attrs:{id:"node-contains"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#node-contains","aria-hidden":"true"}},[t._v("#")]),t._v(" Node.contains()")]),s("p",[s("code",[t._v("contains")]),t._v("方法返回一个布尔值，表示参数节点是否满足以下三个条件之一。")]),s("ul",[s("li",[t._v("参数节点为当前节点。")]),s("li",[t._v("参数节点为当前节点的子节点。")]),s("li",[t._v("参数节点为当前节点的后代节点。")])]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("document"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("contains")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),s("p",[t._v("上面代码检查参数节点"),s("code",[t._v("node")]),t._v("，是否包含在当前文档之中。")]),s("p",[t._v("注意，当前节点传入"),s("code",[t._v("contains")]),t._v("方法，返回"),s("code",[t._v("true")]),t._v("。")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("nodeA"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("contains")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nodeA"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])]),s("h3",{attrs:{id:"node-comparedocumentposition"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#node-comparedocumentposition","aria-hidden":"true"}},[t._v("#")]),t._v(" Node.compareDocumentPosition()")]),s("p",[s("code",[t._v("compareDocumentPosition")]),t._v("方法的用法，与"),s("code",[t._v("contains")]),t._v("方法完全一致，返回一个七个比特位的二进制值，表示参数节点与当前节点的关系。")]),s("table",[s("thead",[s("tr",[s("th",[t._v("二进制值")]),s("th",[t._v("十进制值")]),s("th",[t._v("含义")])])]),s("tbody",[s("tr",[s("td",[t._v("000000")]),s("td",[t._v("0")]),s("td",[t._v("两个节点相同")])]),s("tr",[s("td",[t._v("000001")]),s("td",[t._v("1")]),s("td",[t._v("两个节点不在同一个文档（即有一个节点不在当前文档）")])]),s("tr",[s("td",[t._v("000010")]),s("td",[t._v("2")]),s("td",[t._v("参数节点在当前节点的前面")])]),s("tr",[s("td",[t._v("000100")]),s("td",[t._v("4")]),s("td",[t._v("参数节点在当前节点的后面")])]),s("tr",[s("td",[t._v("001000")]),s("td",[t._v("8")]),s("td",[t._v("参数节点包含当前节点")])]),s("tr",[s("td",[t._v("010000")]),s("td",[t._v("16")]),s("td",[t._v("当前节点包含参数节点")])]),s("tr",[s("td",[t._v("100000")]),s("td",[t._v("32")]),s("td",[t._v("浏览器内部使用")])])])]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token comment"}},[t._v("// HTML 代码如下")]),t._v("\n"),s("span",{attrs:{class:"token comment"}},[t._v('// <div id="mydiv">')]),t._v("\n"),s("span",{attrs:{class:"token comment"}},[t._v('//   <form><input id="test" /></form>')]),t._v("\n"),s("span",{attrs:{class:"token comment"}},[t._v("// </div>")]),t._v("\n\n"),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" div "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("getElementById")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v("'mydiv'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" input "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("getElementById")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v("'test'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\ndiv"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("compareDocumentPosition")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("input"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v("// 20")]),t._v("\ninput"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("compareDocumentPosition")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("div"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v("// 10")]),t._v("\n")])]),s("p",[t._v("上面代码中，节点"),s("code",[t._v("div")]),t._v("包含节点"),s("code",[t._v("input")]),t._v("（二进制"),s("code",[t._v("010000")]),t._v("），而且节点"),s("code",[t._v("input")]),t._v("在节点"),s("code",[t._v("div")]),t._v("的后面（二进制"),s("code",[t._v("000100")]),t._v("），所以第一个"),s("code",[t._v("compareDocumentPosition")]),t._v("方法返回"),s("code",[t._v("20")]),t._v("（二进制"),s("code",[t._v("010100")]),t._v("，即"),s("code",[t._v("010000 + 000100")]),t._v("），第二个"),s("code",[t._v("compareDocumentPosition")]),t._v("方法返回"),s("code",[t._v("10")]),t._v("（二进制"),s("code",[t._v("001010")]),t._v("）。")]),s("p",[t._v("由于"),s("code",[t._v("compareDocumentPosition")]),t._v("返回值的含义，定义在每一个比特位上，所以如果要检查某一种特定的含义，就需要使用比特位运算符。")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" head "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("head"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" body "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("head"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("compareDocumentPosition")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("body"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("4")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("log")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v("'文档结构正确'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("log")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v("'<body> 不能在 <head> 前面'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),s("p",[t._v("上面代码中，"),s("code",[t._v("compareDocumentPosition")]),t._v("的返回值与"),s("code",[t._v("4")]),t._v("（又称掩码）进行与运算（"),s("code",[t._v("&")]),t._v("），得到一个布尔值，表示"),s("code",[t._v("<head>")]),t._v("是否在"),s("code",[t._v("<body>")]),t._v("前面。")]),s("h3",{attrs:{id:"node-isequalnode-，node-issamenode"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#node-isequalnode-，node-issamenode","aria-hidden":"true"}},[t._v("#")]),t._v(" Node.isEqualNode()，Node.isSameNode()")]),s("p",[s("code",[t._v("isEqualNode")]),t._v("方法返回一个布尔值，用于检查两个节点是否相等。所谓相等的节点，指的是两个节点的类型相同、属性相同、子节点相同。")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" p1 "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("createElement")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v("'p'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" p2 "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("createElement")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v("'p'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\np1"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("isEqualNode")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("p2"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])]),s("p",[s("code",[t._v("isSameNode")]),t._v("方法返回一个布尔值，表示两个节点是否为同一个节点。")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" p1 "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("createElement")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v("'p'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" p2 "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("createElement")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v("'p'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\np1"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("isSameNode")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("p2"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v("// false")]),t._v("\np1"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("isSameNode")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("p1"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])]),s("h3",{attrs:{id:"node-normalize"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#node-normalize","aria-hidden":"true"}},[t._v("#")]),t._v(" Node.normalize()")]),s("p",[s("code",[t._v("normailize")]),t._v("方法用于清理当前节点内部的所有文本节点（text）。它会去除空的文本节点，并且将毗邻的文本节点合并成一个，也就是说不存在空的文本节点，以及毗邻的文本节点。")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" wrapper "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("createElement")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v("'div'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nwrapper"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("appendChild")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("document"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("createTextNode")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v("'Part 1 '")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nwrapper"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("appendChild")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("document"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("createTextNode")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v("'Part 2 '")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nwrapper"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("childNodes"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),s("span",{attrs:{class:"token comment"}},[t._v("// 2")]),t._v("\nwrapper"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("normalize")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nwrapper"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("childNodes"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),s("span",{attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\n")])]),s("p",[t._v("上面代码使用"),s("code",[t._v("normalize")]),t._v("方法之前，"),s("code",[t._v("wrapper")]),t._v("节点有两个毗邻的文本子节点。使用"),s("code",[t._v("normalize")]),t._v("方法之后，两个文本子节点被合并成一个。")]),s("p",[t._v("该方法是"),s("code",[t._v("Text.splitText")]),t._v("的逆方法，可以查看《Text 节点对象》一章，了解更多内容。")]),s("h3",{attrs:{id:"node-getrootnode"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#node-getrootnode","aria-hidden":"true"}},[t._v("#")]),t._v(" Node.getRootNode()")]),s("p",[s("code",[t._v("getRootNode")]),t._v("方法返回当前节点所在文档的根节点。")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("document"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("firstChild"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("getRootNode")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("===")]),t._v(" document "),s("span",{attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])]),s("h2",{attrs:{id:"nodelist-接口"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nodelist-接口","aria-hidden":"true"}},[t._v("#")]),t._v(" NodeList 接口")]),s("p",[t._v("节点都是单个对象，有时需要一种数据结构，能够容纳多个节点。DOM 提供两种节点集合，用于容纳多个节点："),s("code",[t._v("NodeList")]),t._v("和"),s("code",[t._v("HTMLCollection")]),t._v("。")]),s("p",[t._v("这两种集合都属于接口规范。许多 DOM 属性和方法，返回的结果是"),s("code",[t._v("NodeList")]),t._v("实例或"),s("code",[t._v("HTMLCollection")]),t._v("实例。")]),s("h3",{attrs:{id:"概述-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#概述-2","aria-hidden":"true"}},[t._v("#")]),t._v(" 概述")]),s("p",[s("code",[t._v("NodeList")]),t._v("实例是一个类似数组的对象，它的成员是节点对象。通过以下方法可以得到"),s("code",[t._v("NodeList")]),t._v("实例。")]),s("ul",[s("li",[s("code",[t._v("Node.childNodes")])]),s("li",[s("code",[t._v("document.querySelectorAll()")]),t._v("、"),s("code",[t._v("document.getElementsByTagName()")]),t._v("等节点搜索方法")])]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("document"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("childNodes "),s("span",{attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),s("span",{attrs:{class:"token class-name"}},[t._v("NodeList")]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])]),s("p",[s("code",[t._v("NodeList")]),t._v("实例很像数组，可以使用"),s("code",[t._v("length")]),t._v("属性和"),s("code",[t._v("forEach")]),t._v("方法。但是，它不是数组，不能使用"),s("code",[t._v("pop")]),t._v("或"),s("code",[t._v("push")]),t._v("之类数组特有的方法。")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" children "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("childNodes"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nArray"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("isArray")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("children"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n\nchildren"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),s("span",{attrs:{class:"token comment"}},[t._v("// 34")]),t._v("\nchildren"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("forEach")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("console"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("log"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),s("p",[t._v("上面代码中，NodeList 实例"),s("code",[t._v("children")]),t._v("不是数组，但是具有"),s("code",[t._v("length")]),t._v("属性和"),s("code",[t._v("forEach")]),t._v("方法。")]),s("p",[t._v("如果"),s("code",[t._v("NodeList")]),t._v("实例要使用数组方法，可以将其转为真正的数组。")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" children "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("childNodes"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" nodeArr "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" Array"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("slice"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("call")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("children"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),s("p",[t._v("除了使用"),s("code",[t._v("forEach")]),t._v("方法遍历 NodeList 实例，还可以使用"),s("code",[t._v("for")]),t._v("循环。")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" children "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("childNodes"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("0")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v(" children"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{attrs:{class:"token operator"}},[t._v("++")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" item "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" children"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),s("p",[t._v("注意，NodeList 实例可能是动态集合，也可能是静态集合。所谓动态集合就是一个活的集合，DOM 删除或新增一个相关节点，都会立刻反映在 NodeList 实例。目前，只有"),s("code",[t._v("Node.childNodes")]),t._v("返回的是一个动态集合，其他的 NodeList 都是静态集合。")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" children "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("childNodes"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nchildren"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),s("span",{attrs:{class:"token comment"}},[t._v("// 18")]),t._v("\ndocument"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("appendChild")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("document"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("createElement")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v("'p'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nchildren"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),s("span",{attrs:{class:"token comment"}},[t._v("// 19")]),t._v("\n")])]),s("p",[t._v("上面代码中，文档增加一个子节点，NodeList 实例"),s("code",[t._v("children")]),t._v("的"),s("code",[t._v("length")]),t._v("属性就增加了1。")]),s("h3",{attrs:{id:"nodelist-prototype-length"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nodelist-prototype-length","aria-hidden":"true"}},[t._v("#")]),t._v(" NodeList.prototype.length")]),s("p",[s("code",[t._v("length")]),t._v("属性返回 NodeList 实例包含的节点数量。")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("document"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("getElementsByTagName")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v("'xxx'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length\n"),s("span",{attrs:{class:"token comment"}},[t._v("// 0")]),t._v("\n")])]),s("p",[t._v("上面代码中，"),s("code",[t._v("document.getElementsByTagName")]),t._v("返回一个 NodeList 集合。对于那些不存在的 HTML 标签，"),s("code",[t._v("length")]),t._v("属性返回"),s("code",[t._v("0")]),t._v("。")]),s("h3",{attrs:{id:"nodelist-prototype-foreach"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nodelist-prototype-foreach","aria-hidden":"true"}},[t._v("#")]),t._v(" NodeList.prototype.forEach()")]),s("p",[s("code",[t._v("forEach")]),t._v("方法用于遍历 NodeList 的所有成员。它接受一个回调函数作为参数，每一轮遍历就执行一次这个回调函数，用法与数组实例的"),s("code",[t._v("forEach")]),t._v("方法完全一致。")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" children "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("childNodes"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nchildren"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("forEach")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("f")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("item"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" i"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" list"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("this")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),s("p",[t._v("上面代码中，回调函数"),s("code",[t._v("f")]),t._v("的三个参数依次是当前成员、位置和当前 NodeList 实例。"),s("code",[t._v("forEach")]),t._v("方法的第二个参数，用于绑定回调函数内部的"),s("code",[t._v("this")]),t._v("，该参数可省略。")]),s("h3",{attrs:{id:"nodelist-prototype-item"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nodelist-prototype-item","aria-hidden":"true"}},[t._v("#")]),t._v(" NodeList.prototype.item()")]),s("p",[s("code",[t._v("item")]),t._v("方法接受一个整数值作为参数，表示成员的位置，返回该位置上的成员。")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("document"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("childNodes"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("item")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token number"}},[t._v("0")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),s("p",[t._v("上面代码中，"),s("code",[t._v("item(0)")]),t._v("返回第一个成员。")]),s("p",[t._v("如果参数值大于实际长度，或者索引不合法（比如负数），"),s("code",[t._v("item")]),t._v("方法返回"),s("code",[t._v("null")]),t._v("。如果省略参数，"),s("code",[t._v("item")]),t._v("方法会报错。")]),s("p",[t._v("所有类似数组的对象，都可以使用方括号运算符取出成员。一般情况下，都是使用方括号运算符，而不使用"),s("code",[t._v("item")]),t._v("方法。")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("document"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("childNodes"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token number"}},[t._v("0")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])]),s("h3",{attrs:{id:"nodelist-prototype-keys-，nodelist-prototype-values-，nodelist-prototype-entries"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nodelist-prototype-keys-，nodelist-prototype-values-，nodelist-prototype-entries","aria-hidden":"true"}},[t._v("#")]),t._v(" NodeList.prototype.keys()，NodeList.prototype.values()，NodeList.prototype.entries()")]),s("p",[t._v("这三个方法都返回一个 ES6 的遍历器对象，可以通过"),s("code",[t._v("for...of")]),t._v("循环遍历获取每一个成员的信息。区别在于，"),s("code",[t._v("keys()")]),t._v("返回键名的遍历器，"),s("code",[t._v("values()")]),t._v("返回键值的遍历器，"),s("code",[t._v("entries()")]),t._v("返回的遍历器同时包含键名和键值的信息。")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" children "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("childNodes"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" key "),s("span",{attrs:{class:"token keyword"}},[t._v("of")]),t._v(" children"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("keys")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("log")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{attrs:{class:"token comment"}},[t._v("// 0")]),t._v("\n"),s("span",{attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\n"),s("span",{attrs:{class:"token comment"}},[t._v("// 2")]),t._v("\n"),s("span",{attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n\n"),s("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" value "),s("span",{attrs:{class:"token keyword"}},[t._v("of")]),t._v(" children"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("values")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("log")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{attrs:{class:"token comment"}},[t._v("// #text")]),t._v("\n"),s("span",{attrs:{class:"token comment"}},[t._v("// <script>")]),t._v("\n"),s("span",{attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n\n"),s("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" entry "),s("span",{attrs:{class:"token keyword"}},[t._v("of")]),t._v(" children"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("entries")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("log")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("entry"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{attrs:{class:"token comment"}},[t._v("// Array [ 0, #text ]")]),t._v("\n"),s("span",{attrs:{class:"token comment"}},[t._v("// Array [ 1, <script> ]")]),t._v("\n"),s("span",{attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n")])]),s("h2",{attrs:{id:"htmlcollection-接口"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#htmlcollection-接口","aria-hidden":"true"}},[t._v("#")]),t._v(" HTMLCollection 接口")]),s("h3",{attrs:{id:"概述-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#概述-3","aria-hidden":"true"}},[t._v("#")]),t._v(" 概述")]),s("p",[s("code",[t._v("HTMLCollection")]),t._v("是一个节点对象的集合，只能包含元素节点（element），不能包含其他类型的节点。它的返回值是一个类似数组的对象，但是与"),s("code",[t._v("NodeList")]),t._v("接口不同，"),s("code",[t._v("HTMLCollection")]),t._v("没有"),s("code",[t._v("forEach")]),t._v("方法，只能使用"),s("code",[t._v("for")]),t._v("循环遍历。")]),s("p",[t._v("返回"),s("code",[t._v("HTMLCollection")]),t._v("实例的，主要是一些"),s("code",[t._v("Document")]),t._v("对象的集合属性，比如"),s("code",[t._v("document.links")]),t._v("、"),s("code",[t._v("docuement.forms")]),t._v("、"),s("code",[t._v("document.images")]),t._v("等。")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("document"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("links "),s("span",{attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),s("span",{attrs:{class:"token class-name"}},[t._v("HTMLCollection")]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])]),s("p",[s("code",[t._v("HTMLCollection")]),t._v("实例都是动态集合，节点的变化会实时反映在集合中。")]),s("p",[t._v("如果元素节点有"),s("code",[t._v("id")]),t._v("或"),s("code",[t._v("name")]),t._v("属性，那么"),s("code",[t._v("HTMLCollection")]),t._v("实例上面，可以使用"),s("code",[t._v("id")]),t._v("属性或"),s("code",[t._v("name")]),t._v("属性引用该节点元素。如果没有对应的节点，则返回"),s("code",[t._v("null")]),t._v("。")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token comment"}},[t._v("// HTML 代码如下")]),t._v("\n"),s("span",{attrs:{class:"token comment"}},[t._v('// <img id="pic" src="http://example.com/foo.jpg">')]),t._v("\n\n"),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" pic "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("getElementById")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v("'pic'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ndocument"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("images"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pic "),s("span",{attrs:{class:"token operator"}},[t._v("===")]),t._v(" pic "),s("span",{attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])]),s("p",[t._v("上面代码中，"),s("code",[t._v("document.images")]),t._v("是一个"),s("code",[t._v("HTMLCollection")]),t._v("实例，可以通过"),s("code",[t._v("<img>")]),t._v("元素的"),s("code",[t._v("id")]),t._v("属性值，从"),s("code",[t._v("HTMLCollection")]),t._v("实例上取到这个元素。")]),s("h3",{attrs:{id:"htmlcollection-prototype-length"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#htmlcollection-prototype-length","aria-hidden":"true"}},[t._v("#")]),t._v(" HTMLCollection.prototype.length")]),s("p",[s("code",[t._v("length")]),t._v("属性返回"),s("code",[t._v("HTMLCollection")]),t._v("实例包含的成员数量。")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("document"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("links"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),s("span",{attrs:{class:"token comment"}},[t._v("// 18")]),t._v("\n")])]),s("h3",{attrs:{id:"htmlcollection-prototype-item"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#htmlcollection-prototype-item","aria-hidden":"true"}},[t._v("#")]),t._v(" HTMLCollection.prototype.item()")]),s("p",[s("code",[t._v("item")]),t._v("方法接受一个整数值作为参数，表示成员的位置，返回该位置上的成员。")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" c "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("images"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" img0 "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" c"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("item")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token number"}},[t._v("0")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),s("p",[t._v("上面代码中，"),s("code",[t._v("item(0)")]),t._v("表示返回0号位置的成员。由于方括号运算符也具有同样作用，而且使用更方便，所以一般情况下，总是使用方括号运算符。")]),s("p",[t._v("如果参数值超出成员数量或者不合法（比如小于0），那么"),s("code",[t._v("item")]),t._v("方法返回"),s("code",[t._v("null")]),t._v("。")]),s("h3",{attrs:{id:"htmlcollection-prototype-nameditem"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#htmlcollection-prototype-nameditem","aria-hidden":"true"}},[t._v("#")]),t._v(" HTMLCollection.prototype.namedItem()")]),s("p",[s("code",[t._v("namedItem")]),t._v("方法的参数是一个字符串，表示"),s("code",[t._v("id")]),t._v("属性或"),s("code",[t._v("name")]),t._v("属性的值，返回对应的元素节点。如果没有对应的节点，则返回"),s("code",[t._v("null")]),t._v("。")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token comment"}},[t._v("// HTML 代码如下")]),t._v("\n"),s("span",{attrs:{class:"token comment"}},[t._v('// <img id="pic" src="http://example.com/foo.jpg">')]),t._v("\n\n"),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" pic "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("getElementById")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v("'pic'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ndocument"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("images"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("namedItem")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v("'pic'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("===")]),t._v(" pic "),s("span",{attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])]),s("h2",{attrs:{id:"parentnode-接口"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#parentnode-接口","aria-hidden":"true"}},[t._v("#")]),t._v(" ParentNode 接口")]),s("p",[t._v("节点对象除了继承 Node 接口以外，还会继承其他接口。"),s("code",[t._v("ParentNode")]),t._v("接口表示当前节点是一个父节点，提供一些处理子节点的方法。"),s("code",[t._v("ChildNode")]),t._v("接口表示当前节点是一个子节点，提供一些相关方法。")]),s("p",[t._v("如果当前节点是父节点，就会继承"),s("code",[t._v("ParentNode")]),t._v("接口。由于只有元素节点（element）、文档节点（document）和文档片段节点（documentFragment）拥有子节点，因此只有这三类节点会继承"),s("code",[t._v("ParentNode")]),t._v("接口。")]),s("h3",{attrs:{id:"parentnode-children"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#parentnode-children","aria-hidden":"true"}},[t._v("#")]),t._v(" ParentNode.children")]),s("p",[s("code",[t._v("children")]),t._v("属性返回一个"),s("code",[t._v("HTMLCollection")]),t._v("实例，成员是当前节点的所有元素子节点。该属性只读。")]),s("p",[t._v("下面是遍历某个节点的所有元素子节点的示例。")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("0")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v(" el"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("children"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{attrs:{class:"token operator"}},[t._v("++")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),s("p",[t._v("注意，"),s("code",[t._v("children")]),t._v("属性只包括元素子节点，不包括其他类型的子节点（比如文本子节点）。如果没有元素类型的子节点，返回值"),s("code",[t._v("HTMLCollection")]),t._v("实例的"),s("code",[t._v("length")]),t._v("属性为"),s("code",[t._v("0")]),t._v("。")]),s("p",[t._v("另外，"),s("code",[t._v("HTMLCollection")]),t._v("是动态集合，会实时反映 DOM 的任何变化。")]),s("h3",{attrs:{id:"parentnode-firstelementchild"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#parentnode-firstelementchild","aria-hidden":"true"}},[t._v("#")]),t._v(" ParentNode.firstElementChild")]),s("p",[s("code",[t._v("firstElementChild")]),t._v("属性返回当前节点的第一个元素子节点。如果没有任何元素子节点，则返回"),s("code",[t._v("null")]),t._v("。")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("document"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("firstElementChild"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("nodeName\n"),s("span",{attrs:{class:"token comment"}},[t._v('// "HTML"')]),t._v("\n")])]),s("p",[t._v("上面代码中，"),s("code",[t._v("document")]),t._v("节点的第一个元素子节点是"),s("code",[t._v("<HTML>")]),t._v("。")]),s("h3",{attrs:{id:"parentnode-lastelementchild"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#parentnode-lastelementchild","aria-hidden":"true"}},[t._v("#")]),t._v(" ParentNode.lastElementChild")]),s("p",[s("code",[t._v("lastElementChild")]),t._v("属性返回当前节点的最后一个元素子节点，如果不存在任何元素子节点，则返回"),s("code",[t._v("null")]),t._v("。")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("document"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lastElementChild"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("nodeName\n"),s("span",{attrs:{class:"token comment"}},[t._v('// "HTML"')]),t._v("\n")])]),s("p",[t._v("上面代码中，"),s("code",[t._v("document")]),t._v("节点的最后一个元素子节点是"),s("code",[t._v("<HTML>")]),t._v("（因为"),s("code",[t._v("document")]),t._v("只包含这一个元素子节点）。")]),s("h3",{attrs:{id:"parentnode-childelementcount"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#parentnode-childelementcount","aria-hidden":"true"}},[t._v("#")]),t._v(" ParentNode.childElementCount")]),s("p",[s("code",[t._v("childElementCount")]),t._v("属性返回一个整数，表示当前节点的所有元素子节点的数目。如果不包含任何元素子节点，则返回"),s("code",[t._v("0")]),t._v("。")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("document"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("childElementCount "),s("span",{attrs:{class:"token comment"}},[t._v("// 13")]),t._v("\n")])]),s("h3",{attrs:{id:"parentnode-append-，parentnode-prepend"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#parentnode-append-，parentnode-prepend","aria-hidden":"true"}},[t._v("#")]),t._v(" ParentNode.append()，ParentNode.prepend()")]),s("p",[s("code",[t._v("append")]),t._v("方法为当前节点追加一个或多个子节点，位置是最后一个元素子节点的后面。")]),s("p",[t._v("该方法不仅可以添加元素子节点，还可以添加文本子节点。")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" parent "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{attrs:{class:"token comment"}},[t._v("// 添加元素子节点")]),t._v("\n"),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" p "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("createElement")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v("'p'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nparent"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("append")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("p"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{attrs:{class:"token comment"}},[t._v("// 添加文本子节点")]),t._v("\nparent"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("append")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v("'Hello'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{attrs:{class:"token comment"}},[t._v("// 添加多个元素子节点")]),t._v("\n"),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" p1 "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("createElement")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v("'p'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" p2 "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("createElement")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v("'p'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nparent"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("append")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("p1"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" p2"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{attrs:{class:"token comment"}},[t._v("// 添加元素子节点和文本子节点")]),t._v("\n"),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" p "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("createElement")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v("'p'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nparent"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("append")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v("'Hello'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" p"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),s("p",[t._v("注意，该方法没有返回值。")]),s("p",[s("code",[t._v("prepend")]),t._v("方法为当前节点追加一个或多个子节点，位置是第一个元素子节点的前面。它的用法与"),s("code",[t._v("append")]),t._v("方法完全一致，也是没有返回值。")]),s("h2",{attrs:{id:"childnode-接口"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#childnode-接口","aria-hidden":"true"}},[t._v("#")]),t._v(" ChildNode 接口")]),s("p",[t._v("如果一个节点有父节点，那么该节点就继承了"),s("code",[t._v("ChildNode")]),t._v("接口。")]),s("h3",{attrs:{id:"childnode-remove"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#childnode-remove","aria-hidden":"true"}},[t._v("#")]),t._v(" ChildNode.remove()")]),s("p",[s("code",[t._v("remove")]),t._v("方法用于从父节点移除当前节点。")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("el"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("remove")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),s("p",[t._v("上面代码在 DOM 里面移除了"),s("code",[t._v("el")]),t._v("节点。")]),s("h3",{attrs:{id:"childnode-before-，childnode-after"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#childnode-before-，childnode-after","aria-hidden":"true"}},[t._v("#")]),t._v(" ChildNode.before()，ChildNode.after()")]),s("p",[s("code",[t._v("before")]),t._v("方法用于在当前节点的前面，插入一个或多个同级节点。两者拥有相同的父节点。")]),s("p",[t._v("注意，该方法不仅可以插入元素节点，还可以插入文本节点。")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" p "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("createElement")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v("'p'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" p1 "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("createElement")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v("'p'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{attrs:{class:"token comment"}},[t._v("// 插入元素节点")]),t._v("\nel"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("before")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("p"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{attrs:{class:"token comment"}},[t._v("// 插入文本节点")]),t._v("\nel"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("before")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v("'Hello'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{attrs:{class:"token comment"}},[t._v("// 插入多个元素节点")]),t._v("\nel"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("before")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("p"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" p1"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{attrs:{class:"token comment"}},[t._v("// 插入元素节点和文本节点")]),t._v("\nel"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("before")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("p"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v("'Hello'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),s("p",[s("code",[t._v("after")]),t._v("方法用于在当前节点的后面，插入一个或多个同级节点，两者拥有相同的父节点。用法与"),s("code",[t._v("before")]),t._v("方法完全相同。")]),s("h3",{attrs:{id:"childnode-replacewith"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#childnode-replacewith","aria-hidden":"true"}},[t._v("#")]),t._v(" ChildNode.replaceWith()")]),s("p",[s("code",[t._v("replaceWith")]),t._v("方法使用参数节点，替换当前节点。参数可以是元素节点，也可以是文本节点。")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" span "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("createElement")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v("'span'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nel"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("replaceWith")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("span"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),s("p",[t._v("上面代码中，"),s("code",[t._v("el")]),t._v("节点将被"),s("code",[t._v("span")]),t._v("节点替换。")])])}],!1,null,null,null);a.default=e.exports}}]);